#include "fsm.h"

state::state(){
	io_map = map_t;
}

state::state(map new_io_map){
	io_map = new_io_map;
}

bool state::add_io_map(map new_io_map){
	
	// First try to find inconsistencies
	for(map_t::iterator it = new_io_map.begin(); it != new_io_map.end(); it++){
		out_pair* found = (out_pair*) io_map.find(it->first);
		if(found != NULL && *found != it->second)
			return false;
	}

	// If none, add mappings all at once
	io_map.insert(new_io_map.begin(), new_io_map.end())
}


